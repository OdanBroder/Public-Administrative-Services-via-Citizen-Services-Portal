services:
  mysql:
    image: mysql:8.0
    container_name: citizen-services-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: citizen_services
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_INNODB_BUFFER_POOL_SIZE: 256M
      MYSQL_INNODB_LOG_FILE_SIZE: 64M
      MYSQL_INNODB_LOG_BUFFER_SIZE: 16M
      MYSQL_INNODB_FLUSH_LOG_AT_TRX_COMMIT: 2
      MYSQL_INNODB_FLUSH_METHOD: O_DIRECT
    command: >
      --default-authentication-plugin=mysql_native_password
      --host-cache-size=0
      --pid-file=/var/lib/mysql/mysqld.pid
      --innodb_force_recovery=0
      --innodb_checksum_algorithm=crc32
      --innodb_log_file_size=64M
      --innodb_buffer_pool_size=256M
      --innodb_log_buffer_size=16M
      --innodb_flush_log_at_trx_commit=2
      --innodb_flush_method=O_DIRECT
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: citizen-services-backend
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - DB_HOST=mysql
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_PORT=3306
      - JWT_SECRET=${JWT_SECRET}
      - PORT=5000
      - CORS_ORIGIN=https://localhost
      - NODE_ENV=development
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: citizen-services-frontend
    restart: always
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=https://localhost/api
      - NODE_ENV=development
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: citizen-services-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/dist:/usr/share/nginx/html
      - ./certificate.crt:/etc/nginx/certs/certificate.crt
      - ./ec-private-key.pem:/etc/nginx/certs/ec-private-key.pem
      - ./ca_bundle.crt:/etc/nginx/certs/ca_bundle.crt
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
  backend_node_modules: