services:
  mysql:
    build:
      context: ./backend
      dockerfile: Dockerfile.db
    container_name: citizen-services-mysql
    restart: always
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --init-connect='SET NAMES utf8mb4'
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p$MYSQL_ROOT_PASSWORD"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: citizen-services-backend
    restart: always
    devices:
      - "/dev/tpm0:/dev/tpm0"
      - "/dev/tpmrm0:/dev/tpmrm0"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: ${PORT:-5000}
      DB_HOST: mysql
      DB_PORT: ${DB_PORT:-3306}
      DB_NAME: ${DB_NAME:-citizen_services}
      DB_USER: ${DB_USER:-citizen_user}
      DB_PASSWORD: ${DB_PASSWORD:-citizen_password}
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_SECURE: ${SMTP_SECURE}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      SMTP_FROM: ${SMTP_FROM}
      FRONTEND_URL: ${FRONTEND_URL:-https://frontend}
    volumes:
      # - ./backend:/app
      - backend_node_modules:/app/node_modules
      - tpm_data:/app/data
      - working_dir:/app/working
      - /var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket
      - tpm_service:/tmp/tpm-service
      - upload_dir:/app/uploads
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: citizen-services-frontend
    restart: always
    depends_on:
      - backend
    environment:
      NODE_ENV: ${NODE_ENV}
    volumes:
      # - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    networks:
      - app-network

  # frontend-admin:
  #   build:
  #     context: ./frontend-admin
  #     dockerfile: Dockerfile
  #   container_name: citizen-services-frontend-admin
  #   restart: always
  #   depends_on:
  #     - backend
  #   environment:
  #     NODE_ENV: ${NODE_ENV}
  #   volumes:
  #     # - ./frontend:/app
  #     - frontend-admin_node_modules:/app/node_modules
  #   networks:
  #     - app-network

  frontend-bca:
    build:
      context: ./frontend-ubnd
      dockerfile: Dockerfile
    container_name: citizen-services-frontend-bca
    restart: always
    depends_on:
      - backend
    environment:
      NODE_ENV: ${NODE_ENV}
    volumes:
      # - ./frontend:/app
      - frontend-bca_node_modules:/app/node_modules
    networks:
      - app-network

  frontend-ca:
    build:
      context: ./frontend-ca
      dockerfile: Dockerfile
    container_name: citizen-services-frontend-ca
    restart: always
    depends_on:
      - backend
    environment:
      NODE_ENV: ${NODE_ENV}
    volumes:
      # - ./frontend:/app
      - frontend-ca_node_modules:/app/node_modules
    networks:
      - app-network

  nginx:
    build:
      context: ./frontend
      dockerfile: Dockerfile.nginx
    container_name: citizen-services-nginx
    restart: always
    ports:
      - "8000:80"
      - "44300:443"
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/dist:/usr/share/nginx/html
      - ./certificate.crt:/etc/nginx/certs/certificate.crt
      - ./ec-private-key.pem:/etc/nginx/certs/ec-private-key.pem
      - ./ca_bundle.crt:/etc/nginx/certs/ca_bundle.crt
    depends_on:
      - frontend
      - backend
    networks:
      - app-network
  # nginx-admin:
  #   build:
  #     context: ./frontend-admin
  #     dockerfile: Dockerfile.nginx
  #   container_name: citizen-services-nginx-admin
  #   restart: always
  #   ports:
  #     - "8001:80"
  #     - "44301:443"
  #   volumes:
  #     - ./frontend-admin/nginx.conf:/etc/nginx/conf.d/default.conf
  #     - ./frontend-admin/dist:/usr/share/nginx/html
  #     - ./certificate.crt:/etc/nginx/certs/certificate.crt
  #     - ./ec-private-key.pem:/etc/nginx/certs/ec-private-key.pem
  #     - ./ca_bundle.crt:/etc/nginx/certs/ca_bundle.crt
  #   depends_on:
  #     - frontend-admin
  #     - backend
  #   networks:
  #     - app-network

  nginx-bca:
    build:
      context: ./frontend-ubnd
      dockerfile: Dockerfile.nginx
    container_name: citizen-services-nginx-bca
    restart: always
    ports:
      - "8002:80"
      - "44302:443"
    volumes:
      - ./frontend-ubnd/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontend-ubnd/dist:/usr/share/nginx/html
      - ./certificate.crt:/etc/nginx/certs/certificate.crt
      - ./ec-private-key.pem:/etc/nginx/certs/ec-private-key.pem
      - ./ca_bundle.crt:/etc/nginx/certs/ca_bundle.crt
    depends_on:
      - frontend-bca
      - backend
    networks:
      - app-network
  nginx-police:
    build:
      context: ./frontend-ca
      dockerfile: Dockerfile.nginx
    container_name: citizen-services-nginx-police
    restart: always
    ports:
      - "8003:80"
      - "44303:443"
    volumes:
      - ./frontend-ca/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontend-ca/dist:/usr/share/nginx/html
      - ./certificate.crt:/etc/nginx/certs/certificate.crt
      - ./ec-private-key.pem:/etc/nginx/certs/ec-private-key.pem
      - ./ca_bundle.crt:/etc/nginx/certs/ca_bundle.crt
    depends_on:
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
    name: citizen_services_mysql_data
  backend_node_modules:
    name: citizen_services_backend_node_modules
  frontend_node_modules:
    name: citizen_services_frontend_node_modules
  frontend-admin_node_modules:
    name: citizen_services_frontend_admin_node_modules
  frontend-bca_node_modules:
    name: citizen_services_frontend_bca_node_modules
  frontend-ca_node_modules:
    name: citizen_services_frontend_ca_node_modules
  frontend_dist:
    name: citizen_services_frontend_dist
  tpm_data: 
    name: citizen_services_tpm_data
  working_dir:
    name: citizen_services_working_dir_ensureInitialized
  tpm_service:
    name: citizen_services_tpm_service
  upload_dir:
    name: citizen_services_upload_dir
  
